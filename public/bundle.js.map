{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/get-task.js","webpack:///./src/main.js","webpack:///./src/make-filter.js","webpack:///./src/make-task.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC,CAAC,EAAC;;;;;;;;;;;;;ACjCH;AAAA;AAAA;AAAA;AAAyC;AACY;AACP;;;AAG9C;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,iEAAW;AACvD;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,iEAAW,CAAC,gEAAO;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mEAAgB;AACjE,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,gEAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;AC/DD;AAAe;AACf;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY,sBAAsB,wBAAwB,sBAAsB,UAAU,OAAO;;AAEjG,YAAY,EAAC;;;;;;;;;;;;;;ACXb;AAAe;AACf,mDAAmD,WAAW,aAAa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,WAAW;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAgE,mCAAmC;AACnG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,qCAAqC,QAAQ;AAC7C,8BAA8B;AAC9B;AACA,oEAAoE,QAAQ,MAAM,QAAQ;AAC1F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export default () => ({\n  title: [\n    `Изучить теорию`,\n    `Сделать домашку`,\n    `Пройти интенсив на соточку`\n  ][Math.floor(Math.random() * 3)],\n  dueDate: Date.now() + 1 + Math.floor(Math.random() * 7) * 24 * 60 * 60 * 1000,\n  tags: new Set([\n    `homework`,\n    `theory`,\n    `practice`,\n    `intensive`,\n    `keks`,\n  ]),\n  picture: `http://picsum.photos/100/100?r=${Math.random()}`,\n  color: [\n    `pink`,\n    `black`,\n    `yellow`,\n    `blue`,\n    `green`\n  ][Math.floor(Math.random() * 5)],\n  repeatingDays: {\n    Mo: true,\n    Tu: false,\n    We: true,\n    Th: false,\n    Fr: true,\n    Sa: true,\n    Su: false,\n  },\n  isFavorite: true,\n  isDone: false,\n});\n","import getTask from '../src/get-task.js';\nimport getFilterElement from '../src/make-filter.js';\nimport getTaskCard from '../src/make-task.js';\n\n\nconst TOTAL_CARDS = 4;\nconst mainFilter = document.querySelector(`.main__filter`);\nconst filterValues = [`All`, `Overdue`, `Today`, `Favorites`, `Repeating`, `Tags`, `Archive`];\nconst taskBoard = document.querySelector(`.board__tasks`);\nconst tasks = []; // массив для хранения всех тасок\n\nconst randomInteger = (min, max) => {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  rand = Math.round(rand);\n  return rand;\n};\n\nconst renderTask = (task) => {\n  taskBoard.insertAdjacentHTML(`beforeend`, getTaskCard(task));\n};\n\nconst onCLickFilter = () => {\n  taskBoard.innerHTML = ``;\n  let taskAmount = randomInteger(1, 10);\n  while (taskAmount) {\n    taskBoard.insertAdjacentHTML(`beforeend`, getTaskCard(getTask()));\n    --taskAmount;\n  }\n};\n\ndocument.addEventListener(`DOMContentLoaded`, function () {\n\n  // ex5\n  if (mainFilter) {\n    filterValues.forEach(function (filterName) {\n      const filterAmount = randomInteger(0, 10);\n      let isChecked = false;\n      if (filterName === `All`) {\n        isChecked = true;\n      }\n      mainFilter.insertAdjacentHTML(`beforeend`, getFilterElement(filterName, filterAmount, isChecked));\n    });\n  }\n\n  // собираем таски в массив\n  let counter = TOTAL_CARDS;\n  while (counter) {\n    tasks.push(getTask());\n    --counter;\n  }\n\n  // рендерим таски\n  if (tasks.length > 0 && taskBoard) {\n    tasks.forEach(function (task) {\n      renderTask(task);\n    });\n  }\n\n\n  // ex7\n  document.querySelectorAll(`input[name=\"filter\"]`).forEach((filter) => {\n    filter.addEventListener(`click`, onCLickFilter);\n  });\n});\n","export default (caption, amount = 0, isChecked = false) =>\n  `<input\n          type=\"radio\"\n          id=\"filter__${caption.toLowerCase()}\"\n          class=\"filter__input visually-hidden\"\n          name=\"filter\"\n          ${isChecked ? ` checked` : ``}\n        />\n        <label for=\"filter__all\" class=\"filter__label\">\n          ${caption.toUpperCase()} <span class=\"filter__${caption.toLowerCase()}-count\">${amount}</span></label\n\n          >`;\n\n","export default (task) => {\n  let taskTemplate = `<article class=\"card card--${task.color}  card--edit}\">\n            <form class=\"card__form\" method=\"get\">\n              <div class=\"card__inner\">\n                <div class=\"card__control\">\n                  <button type=\"button\" class=\"card__btn card__btn--edit\">\n                    edit\n                  </button>\n                  <button type=\"button\" class=\"card__btn card__btn--archive\">\n                    archive\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"card__btn card__btn--favorites card__btn--disabled\"\n                  >\n                    favorites\n                  </button>\n                </div>\n\n                <div class=\"card__color-bar\">\n                  <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                    <use xlink:href=\"#wave\"></use>\n                  </svg>\n                </div>\n\n                <div class=\"card__textarea-wrap\">\n                  <label>\n                    <textarea\n                      class=\"card__text\"\n                      placeholder=\"Start typing your text here...\"\n                      name=\"text\"\n                    >\n\n${task.title}</textarea\n\n                    >\n                  </label>\n                </div>\n\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <button class=\"card__date-deadline-toggle\" type=\"button\">\n\n                        date: <span class=\"card__date-status\">${task.dueDate ? task.dueDate : `no`}</span>\n                      </button>\n\n                      <fieldset class=\"card__date-deadline\" disabled >\n                        <label class=\"card__input-deadline-wrap\">\n                          <input\n                            class=\"card__date\"\n                            type=\"text\"\n                            placeholder=\"23 September\"\n                            name=\"date\"\n                          />\n                        </label>\n                        <label class=\"card__input-deadline-wrap\">\n                          <input\n                            class=\"card__time\"\n                            type=\"text\"\n                            placeholder=\"11:15 PM\"\n                            name=\"time\"\n                          />\n                        </label>\n                      </fieldset>\n\n                      <button class=\"card__repeat-toggle\" type=\"button\">\n\n                        repeat:<span class=\"card__repeat-status\">no</span>\n                      </button>\n\n                      <fieldset class=\"card__repeat-days\" disabled>\n                        <div class=\"card__repeat-days-inner\">`;\n\n  for (const weekDay in task.repeatingDays) {\n    if ({}.hasOwnProperty.call(task.repeatingDays, weekDay)) {\n      taskTemplate += `<input\n                            class=\"visually-hidden card__repeat-day-input\"\n                            type=\"checkbox\"\n                            id=\"repeat-${weekDay}-2\"\n                            name=\"repeat\"\n                            value=\"${weekDay}\"\n                            ${task.repeatingDays[weekDay] ? `checked` : ``}\n                      />\n                      <label class=\"card__repeat-day\" for=\"repeat-${weekDay}-2\">${weekDay}</label >`;\n    }\n  }\n  taskTemplate += `</div>\n                      </fieldset>\n                    </div>\n                    <div class=\"card__hashtag\">`;\n\n  taskTemplate += `<div class=\"card__hashtag-list\">`;\n  const hashtagsTemplate = [...task.tags].map((tag) => `<span class=\"card__hashtag-inner\">\n                          <input\n                            type=\"hidden\"\n                            name=\"hashtag\"\n                            value=\"${tag}\"\n                            class=\"card__hashtag-hidden-input\"\n                          />\n                          <button type=\"button\" class=\"card__hashtag-name\">\n                            #${tag}\n\n                          </button>\n                          <button type=\"button\" class=\"card__hashtag-delete\">\n                            delete\n                          </button>\n\n                        </span>`).join(``);\n\n  taskTemplate += hashtagsTemplate;\n\n  taskTemplate += `</div><label>\n  <input type = \"text\" class=\"card__hashtag-input\"  name =\"hashtag-input\"  placeholder = \"Type new hashtag here\" />\n    </label>\n    </div>\n    </div>\n\n    <label class=\"card__img-wrap card__img-wrap--empty\">\n\n    <input  type = \"file\" class=\"card__img-input visually-hidden\" name = \"img\" />\n    <img src = \"${task.picture ? task.picture : `` }\" alt = \"task picture\" class=\"card__img\" />\n    </label>\n    <div class = \"card__colors-inner\" >\n    <h3 class= \"card__colors-title\" > Color </h3>\n    <div class= \"card__colors-wrap\" >\n    <input type = \"radio\" id = \"color-black-2\" class= \"card__color-input card__color-input--black visually-hidden\" name = \"color\"\n  value = \"black\" />\n    <label for= \"color-black-2\" class= \"card__color card__color--black\"> black </label>\n    <input type = \"radio\" id = \"color-yellow-2\" class= \"card__color-input card__color-input--yellow visually-hidden\" name = \"color\"\n  value = \"yellow\"  />\n    <label for= \"color-yellow-2\" class=\"card__color card__color--yellow\"> yellow </label>\n    <input type = \"radio\" id = \"color-blue-2\" class= \"card__color-input card__color-input--blue visually-hidden\"  name = \"color\"  value = \"blue\" />\n    <label for= \"color-blue-2\" class= \"card__color card__color--blue\"> blue </label>\n    <input type = \"radio\" id = \"color-green-2\" class= \"card__color-input card__color-input--green visually-hidden\" name = \"color\"\n  value = \"green\" />\n    <label for= \"color-green-2\" class= \"card__color card__color--green\"> green </label>\n    <input type = \"radio\" id = \"color-pink-2\" class= \"card__color-input card__color-input--pink visually-hidden\"  name = \"color\"\n  value = \"pink\"  checked />\n  <label for= \"color-pink-2\" class= \"card__color card__color--pink\"> pink </label>\n    </div>\n    </div>\n    </div>\n\n    <div class= \"card__status-btns\" >\n    <button class= \"card__save\"\n  type = \"submit\" > save </button>\n    <button class= \"card__delete\"  type = \"button\" > delete </button>\n    </div>\n    </div>\n    </form>\n    </article>`;\n  return taskTemplate;\n};\n"],"sourceRoot":""}